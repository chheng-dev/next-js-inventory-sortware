generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// Category Table
model Category {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String?
}

// Brand Table
model Brand {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String
}

// Unit Table
model Unit {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  title        String
  abbreviation String
  // defaultUnit  Boolean
}

// Warehouse Table
model Warehouse {
  id                 String               @id @default(auto()) @map("_id") @db.ObjectId
  name               String
  location           String?
  description        String?
  warehouseType      String
  AddStockAdjustment AddStockAdjustment[]
  TransferStockAdjustment TransferStockAdjustment[]
}


// Supplier Table 
model Supplier {
  id            String  @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  phone         String?
  email         String?
  address       String?
  contactPerson String?
  supplierCode  String  @unique
  paymentTerm   String?
  taxID         String?
  notes         String?
}


// Item Table
// model Item {
//   id            Int @id @default((autoincrement()))
//   name          String 
//   description   String?
//   category Category @relation(fields: [categoryId], references: [id])
//   categoryId    Int
//   sku           String  @unique
//   barcode       String?
//   quantity      Int
//   unit          Unit  @relation(fields: [unitId], references: [id])
//   unitId        Int
//   brand         Brand @relation(fields: [brandId], references: [id])
//   brandId       Int 

// }

// Add Stock Ajustment
model AddStockAdjustment {
  id              String    @id @default(auto()) @map("_id") @db.ObjectId
  referenceNumber String
  addStockQty     Int
  notes           String?
  warehouse       Warehouse @relation(fields: [warehouseId], references: [id])
  warehouseId     String    @db.ObjectId
}

// Transfer Stock Ajustment
model TransferStockAdjustment {
  id                   String    @id @default(auto()) @map("_id") @db.ObjectId
  referenceNumber      String
  transferStockQty     Int
  notes                String?
  warehouse            Warehouse @relation(fields: [warehouseId], references: [id])
  warehouseId          String    @db.ObjectId
}
